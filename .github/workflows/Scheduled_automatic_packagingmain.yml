name: Scheduled automatic packaging
on:
  repository_dispatch:
    types:
      - GitHub
      - GitLab

jobs:
  build-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        env:
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secret.DOCKER_PASSWORD }}

          VERSION: ${{ github.event.client_payload.version }}
        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-ui.git
            cd rainbond-ui
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-ui-cloud.git
            cd rainbond-ui-cloud
          fi
          chmod +x ./build.sh
          ./build.sh
          docker build -t rainbond/rainbond-ui:$VERSION .
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push rainbond/rainbond-ui:$VERSION

  build-rainbond-allinone:
    needs: build-ui
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 yapf==0.26.0

      - name: Pull code and Build allinone image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          TRAVIS_PULL_REQUEST: false
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
          ADAPTOR_BRANCH: ${{ secrets.ADAPTOR_BRANCH}}

          ARCH: ${{ env.ARCH}}
        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-console.git
            cd rainbond-console
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-console-cloud.git
            cd rainbond-console-cloud
          fi
          chmod +x  ./release.sh
          ./release.sh allinone

############################################
# build rainbond region
# build all components simultaneously
############################################
  build-rainbond-region-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh api push
  build-rainbond-region-chaos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh chaos push
  build-rainbond-region-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh gateway push
  build-rainbond-region-monitor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh monitor push
  build-rainbond-region-mq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh mq push
  build-rainbond-region-webcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh webcli push
  build-rainbond-region-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh worker push
  build-rainbond-region-eventlog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh eventlog push
  build-rainbond-region-init-probe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh init-probe push
  build-rainbond-region-mesh-data-panel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh mesh-data-panel push
  build-rainbond-region-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh node push
  build-rainbond-region-resource-proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh resource-proxy push
  build-rainbond-region-grctl-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18

      - name: Pull code and Build the Docker image
        env:
          VERSION: ${{ github.event.client_payload.version }}
          DISABLE_GOPROXY: true
          
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [ ${{ github.event.action }} == 'GitHub' ];then
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          else
            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
          fi
          cd rainbond
          chmod +x ./release.sh
          ./release.sh grctl push
          ./release.sh shell push
############################################
# build rainbond operator
############################################
  build-operator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18
      - name: install-golint
        run: |
          git clone https://github.com/golang/lint.git
          cd lint/golint
          go install

      - name: Build and push
        env:
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

          VERSION: ${{ github.event.client_payload.version }}

          ARCH: ${{ env.ARCH }}
        run: |
          git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-operator.git
          cd rainbond-operator
          docker build --build-arg ARCH=$ARCH -t rainbond/rainbond-operator:$VERSION .
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push rainbond/rainbond-operator:$VERSION

  build-dind:
    needs: [build-ui,build-rainbond-region-api,build-rainbond-region-chaos,build-rainbond-region-gateway,build-rainbond-region-monitor,build-rainbond-region-mq,build-rainbond-region-webcli,build-rainbond-region-worker,build-rainbond-region-eventlog,build-rainbond-region-init-probe,build-rainbond-region-mesh-data-panel,build-rainbond-region-node,build-rainbond-region-resource-proxy,build-rainbond-region-grctl-shell,build-operator]
    runs-on: ubuntu-20.04
    if: ${{ github.event.action }} == 'GitHub'
    steps:
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 yapf==0.26.0

      - name: Build the Docker image
        env:
          TRAVIS_PULL_REQUEST: false

          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

          VERSION: ${{ github.event.client_payload.version }}
          ADAPTOR_BRANCH: ${{ env.ADAPTOR_BRANCH }}
          ARCH: ${{ env.ARCH }}
        run: |
          git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-console.git
          cd rainbond-console
          ./release.sh dind
